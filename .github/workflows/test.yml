name: Test

on:
  workflow_dispatch:
  push:
    branches: [ testing ]

jobs:
  build:
    uses: ./.github/workflows/main.yml
  prepare:
    name: Test Preparation
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download Java
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 8
      - name: Clone
        uses: actions/checkout@v3
      - name: Ensure jekaw is executable
        run: chmod +x jekaw
        working-directory: testing/
      - name: Build setup and game provider jars
        run: './jekaw Build#pack'
        working-directory: testing/
      - name: Download OptiFabric jars
        uses: actions/download-artifact@v3
        with:
          name: Optifabric-Artifact
          path: built/
      - name: Check downloaded file structure
        run: ls -R
        working-directory: built/
      - name: Filter for the OptiFabric mod jar
        run: ls -Q | grep -xv optifabric-[[:digit:]]+\.[[:digit:]]+\.jar | xargs rm
        working-directory: built/
      - name: Upload testing jars
        uses: actions/upload-artifact@v3
        with:
          name: Setup
          path: |
            built/optifabric-*.*.jar
            testing/jeka/output/will-it-mix.jar
            testing/jeka/output/will-it-mix-provider.jar
  test-1_19_2:
    name: Test 1.19.2
    runs-on: ubuntu-latest
    needs: prepare
    steps:
      - name: Download Java
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 17
      - name: Download setup jar
        uses: actions/download-artifact@v3
        with:
          name: Setup
      - name: Prepare for testing
        run: java -jar will-it-mix.jar prepare 1.19.2 ${{ github.workspace }}
      - name: Get OptiFabric mod jar location
        id: mod
        run: echo "version=$(grep -x optifabric-[[:digit:]]+\.[[:digit:]]+\.jar)" >> $GITHUB_OUTPUT
      - name: Check OptiFabric mod jar location
        run: echo "The OptiFabric jar is at ${{ steps.mod.outputs.version }}"
      - name: Write launch config file
        run: echo "commonProperties\n\tfabric.addMods=${{ github.workspace }}/${{ steps.mod.outputs.version }}\n" > launch.cfg
      - name: Clone
        uses: actions/checkout@v3
        with:
          path: repo
      - name: Test OptiFabric alone
        uses: ./repo/.github/actions/run-test
        with:
          config: >-
            {
              "version": "1.19.2",
              "optifine": "HD_U_I1",
              "jars": []
            }
          provider: ${{ github.workspace }}/will-it-mix-provider.jar
        continue-on-error: true
  test-1_19_3:
    name: Test 1.19.3
    runs-on: ubuntu-latest
    needs: prepare
    steps:
      - name: Download Java
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 17
      - name: Download setup jar
        uses: actions/download-artifact@v3
        with:
          name: Setup
      - name: Prepare for testing
        run: java -jar will-it-mix.jar prepare 1.19.3 ${{ github.workspace }}
      - name: Get OptiFabric mod jar location
        id: mod
        run: echo "version=$(grep -x optifabric-[[:digit:]]+\.[[:digit:]]+\.jar)" >> $GITHUB_OUTPUT
      - name: Check OptiFabric mod jar location
        run: echo "The OptiFabric jar is at ${{ steps.mod.outputs.version }}"
      - name: Write launch config file
        run: echo "commonProperties\n\tfabric.addMods=${{ github.workspace }}/${{ steps.mod.outputs.version }}\n" > launch.cfg
      - name: Clone
        uses: actions/checkout@v3
        with:
          path: repo
      - name: Test OptiFabric alone
        uses: ./repo/.github/actions/run-test
        with:
          config: >-
            {
              "version": "1.19.3",
              "optifine": "HD_U_I2_pre5",
              "jars": []
            }
          provider: ${{ github.workspace }}/will-it-mix-provider.jar
        continue-on-error: true
      - name: Test OptiFabric with Fabric API
        uses: ./repo/.github/actions/run-test
        with:
          config: >-
            {
              "version": "1.19.3",
              "optifine": "HD_U_I2_pre5",
              "jars": ["net.fabricmc.fabric-api:fabric-api:0.75.1+1.19.3"]
            }
          provider: ${{ github.workspace }}/will-it-mix-provider.jarr
        continue-on-error: true
